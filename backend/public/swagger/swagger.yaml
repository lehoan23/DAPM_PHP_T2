openapi: 3.0.0
info:
  title: Project and Payment API
  description: API for managing users, projects, categories, and payments.
  version: 1.0.0
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      description: Endpoint for users to register by providing their username, email, and password.
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                email:
                  type: string
                  format: email
                  example: "john@example.com"
                password:
                  type: string
                  example: "password123"
                password_confirmation:
                  type: string
                  example: "password123"
              required:
                - username
                - email
                - password
                - password_confirmation
      responses:
        '201':
          description: Successfully registered user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: "john_doe"
                  email:
                    type: string
                    example: "john@example.com"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Validation failed: [list of validation errors]"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/login:
    post:
      summary: Login user
      description: Endpoint for users to log in using their email and password. Returns a JWT token and role-based message.
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in and received token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "your-access-token-here"
                  refresh_token:
                    type: string
                    example: "your-refresh-token-here"
                  message:
                    type: string
                    example: "Welcome Admin"
        '401':
          description: Unauthorized – Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '403':
          description: Forbidden – Invalid role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden: Invalid role"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/logout:
    post:
      summary: Logout user
      description: Endpoint for logging out the currently authenticated user. Invalidates the JWT token.
      tags:
        - Auth
      security:
        - api_key: []  # This route requires an authenticated user with a valid JWT token
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully logged out"
        '401':
          description: Unauthorized – User is not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/refresh:
    post:
      summary: Refresh JWT token
      description: Endpoint for refreshing the user's JWT token using a valid refresh token. It requires a refresh token to be provided in the request.
      tags:
        - Auth
      security:
        - api_key: []  # This route requires an authenticated user with a valid JWT token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: The refresh token used to obtain a new JWT token
                  example: "your-refresh-token-here"
      responses:
        '200':
          description: Successfully refreshed token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The new JWT access token
                    example: "new-access-token"
                  refresh_token:
                    type: string
                    description: The new refresh token
                    example: "new-refresh-token"
                  message:
                    type: string
                    example: "refresh done"
        '400':
          description: Bad Request – Missing or invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid refresh token"
        '404':
          description: User not found – The user associated with the provided refresh token could not be found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/me:
    get:
      summary: Get the current authenticated user
      description: Endpoint to retrieve the information of the currently authenticated user. It requires the user to be authenticated via JWT token.
      tags:
        - Auth
      security:
        - api_key: []  # This route requires an authenticated user with a valid JWT token
      responses:
        '200':
          description: Successfully retrieved user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The user's unique identifier
                    example: 1
                  name:
                    type: string
                    description: The user's full name
                    example: "John Doe"
                  email:
                    type: string
                    description: The user's email address
                    example: "johndoe@example.com"
                  username:
                    type: string
                    description: The user's username
                    example: "johndoe"
                  role_id:
                    type: integer
                    description: The user's role ID
                    example: 2
                  created_at:
                    type: string
                    format: date-time
                    description: The date and time when the user was created
                    example: "2024-11-25T12:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    description: The date and time when the user was last updated
                    example: "2024-11-25T12:00:00Z"
        '401':
          description: Unauthorized – The user is not authenticated or the token is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/update-me:
    put:
      summary: Update current user's profile
      description: Endpoint to update the profile information of the currently authenticated user. It requires a valid JWT token for authentication.
      tags:
        - Auth
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The user's username
                  example: "newUsername"
                email:
                  type: string
                  description: The user's email address
                  example: "newemail@example.com"
                phone_number:
                  type: string
                  description: The user's phone number
                  example: "1234567890"
                address:
                  type: string
                  description: The user's address
                  example: "123 Main St, City, Country"
              required:
                - username
                - email
                - phone_number
                - address
      responses:
        '200':
          description: Successfully updated user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated successfully"
        '401':
          description: Unauthorized – The user is not authenticated or the token is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not Found – The user does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '422':
          description: Unprocessable Entity – Validation errors occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      username:
                        type: array
                        items:
                          type: string
                        example: ["Hãy nhập Username", "Username đã tồn tại"]
                      email:
                        type: array
                        items:
                          type: string
                        example: ["Email không hợp lệ"]
                      phone_number:
                        type: array
                        items:
                          type: string
                        example: ["Nhập phone number", "Kí tự tối đa là 255"]
                      address:
                        type: array
                        items:
                          type: string
                        example: ["Nhập địa chỉ"]
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/get-registered-project:
    get:
      summary: Get the list of projects registered by the current user
      description: This endpoint retrieves the projects that the currently authenticated user has registered for. It returns paginated results.
      tags:
        - User
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token
      parameters:
        - name: limit
          in: query
          description: Number of projects to return per page (default is 10)
          required: false
          schema:
            type: integer
            example: 10
            default: 10
      responses:
        '200':
          description: Successfully retrieved the list of registered projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        project_id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        amount:
                          type: number
                          format: float
                          example: 1000.0
                        status:
                          type: string
                          example: "Active"
                        project_name:
                          type: string
                          example: "Project A"
                        project_description:
                          type: string
                          example: "Description of Project A"
                        project_goal_amount:
                          type: number
                          format: float
                          example: 5000.0
                        project_collected_amount:
                          type: number
                          format: float
                          example: 1000.0
                        project_status:
                          type: string
                          example: "Ongoing"
                        project_start_date:
                          type: string
                          format: date
                          example: "2024-01-01"
                        project_end_date:
                          type: string
                          format: date
                          example: "2024-12-31"
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      total_pages:
                        type: integer
                        example: 5
                      total_records:
                        type: integer
                        example: 50
                      records_per_page:
                        type: integer
                        example: 10
        '401':
          description: Unauthorized – The user is not authenticated or the token is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not Found – No registered projects were found for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/creator/project:
    get:
      summary: Get the list of projects created by the current creator
      description: This endpoint retrieves the list of projects that the currently authenticated user (as a creator) has created. It returns paginated results.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      parameters:
        - name: limit
          in: query
          description: Number of projects to return per page (default is 10)
          required: false
          schema:
            type: integer
            example: 10
            default: 10
      responses:
        '200':
          description: Successfully retrieved the list of projects created by the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Project A"
                        description:
                          type: string
                          example: "Description of Project A"
                        status:
                          type: string
                          example: "Active"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-01-01T00:00:00Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2024-01-10T00:00:00Z"
                        creator:
                          type: string
                          example: "Creator A"
                        link_image:
                          type: string
                          example: "https://example.com/image.jpg"
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      total_pages:
                        type: integer
                        example: 5
                      total_records:
                        type: integer
                        example: 50
                      records_per_page:
                        type: integer
                        example: 10
        '401':
          description: Unauthorized – The user is not authenticated or the token is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not Found – No projects were found for the current creator
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"
  
  /api/auth/creator/project-create:
    post:
      summary: Create a new project by the current creator
      description: This endpoint allows the authenticated user with the `creator` role to create a new project. The project will be submitted for approval and will initially have a "Pending" status.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "New Project"
                  description: "The name of the project."
                description:
                  type: string
                  example: "This is a description of the new project."
                  description: "Detailed description of the project."
                goal_amount:
                  type: number
                  format: float
                  example: 10000.0
                  description: "The goal amount for the project."
                collected_amount:
                  type: number
                  format: float
                  example: 0.0
                  description: "The amount collected so far."
                start_date:
                  type: string
                  format: date
                  example: "2024-01-01"
                  description: "The start date of the project."
                end_date:
                  type: string
                  format: date
                  example: "2024-12-31"
                  description: "The end date of the project (must be after start date)."
                cate_id:
                  type: integer
                  example: 1
                  description: "The category ID to which the project belongs."
                image:
                  type: string
                  format: binary
                  description: "The image associated with the project (optional)."
      responses:
        '201':
          description: Successfully created a new project and submitted for approval
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Yêu cầu tạo dự án đã được gửi và chờ phê duyệt."
                  complaint:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "New Project"
                      description:
                        type: string
                        example: "This is a description of the new project."
                      goal_amount:
                        type: number
                        format: float
                        example: 10000.0
                      collected_amount:
                        type: number
                        format: float
                        example: 0.0
                      start_date:
                        type: string
                        format: date
                        example: "2024-01-01"
                      end_date:
                        type: string
                        format: date
                        example: "2024-12-31"
                      cate_id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: "Pending"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-01-01T00:00:00Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2024-01-01T00:00:00Z"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `creator` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '422':
          description: Unprocessable Entity – Validation error, such as invalid dates or missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ngày kết thúc phải lớn hơn ngày bắt đầu."
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/creator/project-edit/{id}:
    get:
      summary: Get project details for editing by the creator
      description: This endpoint allows the authenticated user with the `creator` role to get the details of a specific project for editing.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to retrieve details for editing
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved project details for editing
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Project Title"
                  description:
                    type: string
                    example: "Project description"
                  goal_amount:
                    type: number
                    format: float
                    example: 10000.0
                  collected_amount:
                    type: number
                    format: float
                    example: 2000.0
                  start_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  end_date:
                    type: string
                    format: date
                    example: "2024-12-31"
                  cate_id:
                    type: integer
                    example: 2
                  creator:
                    type: string
                    example: "john_doe"
                  link_image:
                    type: string
                    example: "/uploads/image/project1.jpg"
                  status:
                    type: string
                    example: "Pending"
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00Z"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `creator` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not found – The project with the specified ID was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not found detail of project"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/creator/pending_project-edit/{id}:
    get:
      summary: Get pending project details for editing by the creator
      description: This endpoint allows the authenticated user with the `creator` role to get the details of a pending project for editing.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pending project to retrieve details for editing
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved pending project details for editing
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Pending Project Title"
                  description:
                    type: string
                    example: "Pending project description"
                  goal_amount:
                    type: number
                    format: float
                    example: 10000.0
                  collected_amount:
                    type: number
                    format: float
                    example: 2000.0
                  start_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  end_date:
                    type: string
                    format: date
                    example: "2024-12-31"
                  cate_id:
                    type: integer
                    example: 2
                  creator:
                    type: string
                    example: "john_doe"
                  link_image:
                    type: string
                    example: "/uploads/image/pending_project.jpg"
                  status:
                    type: string
                    example: "Pending"
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-01-01T00:00:00Z"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `creator` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not found – The pending project with the specified ID was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not found detail of project"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/creator/project-update/{id}:
    put:
      summary: Update a project by its ID
      description: This endpoint allows the authenticated user with the `creator` role to update the details of a specific project by its ID.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Project Name"
                description:
                  type: string
                  example: "Updated project description"
                goal_amount:
                  type: number
                  format: float
                  example: 15000.0
                end_date:
                  type: string
                  format: date
                  example: "2024-12-31"
                cate_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Successfully updated project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Updated Project Name"
                      description:
                        type: string
                        example: "Updated project description"
                      goal_amount:
                        type: number
                        format: float
                        example: 15000.0
                      end_date:
                        type: string
                        format: date
                        example: "2024-12-31"
                      cate_id:
                        type: integer
                        example: 2
                      creator:
                        type: string
                        example: "john_doe"
                  message:
                    type: string
                    example: "Update status successfully"
        '400':
          description: Bad request – Validation error or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Please fill in the name"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `creator` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not found – The project with the specified ID was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '422':
          description: Unprocessable Entity – Validation error for date or other fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ngày kết thúc phải lớn hơn ngày bắt đầu."
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/creator/pending_project-update/{id}:
    put:
      summary: Update a pending project by its ID
      description: This endpoint allows the authenticated user with the `creator` role to update the details of a pending project by its ID.
      tags:
        - Creator
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be a creator
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pending project to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Pending Project Name"
                description:
                  type: string
                  example: "Updated description for the pending project"
                goal_amount:
                  type: number
                  format: float
                  example: 15000.0
                end_date:
                  type: string
                  format: date
                  example: "2024-12-31"
                cate_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Successfully updated pending project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Updated Pending Project Name"
                      description:
                        type: string
                        example: "Updated description for the pending project"
                      goal_amount:
                        type: number
                        format: float
                        example: 15000.0
                      end_date:
                        type: string
                        format: date
                        example: "2024-12-31"
                      cate_id:
                        type: integer
                        example: 2
                  message:
                    type: string
                    example: "Update successfully"
        '400':
          description: Bad request – Validation error or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Please fill in the name"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `creator` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not found – The pending project with the specified ID was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '422':
          description: Unprocessable Entity – Validation error for date or other fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ngày kết thúc phải lớn hơn ngày bắt đầu."
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/project-create:
    post:
      summary: Create a new project as an admin
      description: This endpoint allows an authenticated user with the `admin` role to create a new project with details like name, description, goal amount, dates, category, and images.
      tags:
        - Admin
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be an admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "New Project"
                description:
                  type: string
                  example: "Description for the new project"
                goal_amount:
                  type: number
                  format: float
                  example: 10000.0
                start_date:
                  type: string
                  format: date
                  example: "2024-01-01"
                end_date:
                  type: string
                  format: date
                  example: "2024-12-31"
                cate_id:
                  type: integer
                  example: 1
                image:
                  type: string
                  format: binary
                  description: List of images to be uploaded for the project (optional)
      responses:
        '201':
          description: Successfully created a new project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Project created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "New Project"
                      description:
                        type: string
                        example: "Description for the new project"
                      goal_amount:
                        type: number
                        format: float
                        example: 10000.0
                      collected_amount:
                        type: number
                        format: float
                        example: 0.0
                      start_date:
                        type: string
                        format: date
                        example: "2024-01-01"
                      end_date:
                        type: string
                        format: date
                        example: "2024-12-31"
                      cate_id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: "Active"
                      create_by:
                        type: integer
                        example: 1
        '400':
          description: Bad request – Validation error or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Please fill in the name"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `admin` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '422':
          description: Unprocessable Entity – Validation error, e.g., start date greater than end date
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ngày kết thúc phải lớn hơn ngày bắt đầu."
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/project-update/{id}:
    put:
      summary: Update an existing project as an admin
      description: This endpoint allows an authenticated user with the `admin` role to update the details of an existing project, including name, description, goal amount, category, and images.
      tags:
        - Admin
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be an admin
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to be updated
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Project"
                description:
                  type: string
                  example: "Updated description for the project"
                goal_amount:
                  type: number
                  format: float
                  example: 15000.0
                start_date:
                  type: string
                  format: date
                  example: "2024-01-01"
                end_date:
                  type: string
                  format: date
                  example: "2025-12-31"
                cate_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successfully updated the project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Update status successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Updated Project"
                      description:
                        type: string
                        example: "Updated description for the project"
                      goal_amount:
                        type: number
                        format: float
                        example: 15000.0
                      start_date:
                        type: string
                        format: date
                        example: "2024-01-01"
                      end_date:
                        type: string
                        format: date
                        example: "2025-12-31"
                      cate_id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: "Active"
                      create_by:
                        type: integer
                        example: 1
        '400':
          description: Bad request – Validation error or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Please fill in the name"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `admin` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not Found – Project not found with the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Project not found"
        '422':
          description: Unprocessable Entity – Validation error, e.g., end date is before start date
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ngày kết thúc phải lớn hơn ngày bắt đầu."
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/project-delete/{id}:
    delete:
      summary: Soft delete a project as an admin
      description: This endpoint allows an authenticated user with the `admin` role to soft delete a project by its ID. Soft delete means marking the project as deleted without removing it permanently from the database.
      tags:
        - Admin
      security:
        - api_key: []  # This route requires the user to be authenticated with a valid JWT token and be an admin
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to be deleted
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully soft deleted the project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Project has been soft deleted successfully"
        '401':
          description: Unauthorized – The user is not authenticated or does not have the `admin` role
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Token is invalid or missing"
        '404':
          description: Not Found – Project not found with the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/pending_project:
    get:
      summary: Get list of pending projects
      description: Endpoint for the admin to retrieve the list of pending projects.
      tags:
        - Admin
      security:
        - api_key: []
      responses:
        '200':
          description: List of pending projects retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Pending Project Name"
                    description:
                      type: string
                      example: "Description of the pending project"
                    creator:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10
                        name:
                          type: string
                          example: "John Doe"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
  
  /api/auth/admin/approve-project/{id}:
    post:
      summary: Approve a pending project
      description: Endpoint for the admin to approve a pending project and move it to the active projects list.
      tags:
        - Admin
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pending project to approve.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Project approved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dự án đã được phê duyệt."
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"

  /api/auth/admin/reject-project/{id}:
    post:
      summary: Reject a pending project
      description: Endpoint for the admin to reject a pending project and remove it from the pending projects list.
      tags:
        - Admin
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pending project to reject.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Project rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dự án đã bị từ chối."
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"

  /api/auth/admin/project-edit/{id}:
    get:
      summary: Get project details by ID
      description: Endpoint for the admin to get the details of a project by its ID, including the creator and project image link.
      tags:
        - Admin
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to retrieve details for.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully retrieved project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Project Name"
                  description:
                    type: string
                    example: "Project Description"
                  goal_amount:
                    type: number
                    format: float
                    example: 10000.0
                  collected_amount:
                    type: number
                    format: float
                    example: 5000.0
                  start_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  end_date:
                    type: string
                    format: date
                    example: "2024-12-31"
                  status:
                    type: string
                    example: "Active"
                  Creator:
                    type: string
                    example: "admin_username"
                  LinkImage:
                    type: string
                    example: "https://example.com/image.jpg"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not found detail of project"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/project-restore/{id}:
    patch:
      summary: Restore a soft-deleted project
      description: Endpoint for the admin to restore a soft-deleted project by its ID.
      tags:
        - Admin
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the project to restore.
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successfully restored project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Project has been restored successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/user-create:
    post:
      summary: Create a new user
      description: This endpoint allows admins to create new users by providing necessary details such as username, email, password, and role.
      tags:
        - Admin
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "johndoe"
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123"
                password_confirmation:
                  type: string
                  format: password
                  example: "Password123"
                role_id:
                  type: integer
                  example: 2
              required:
                - username
                - email
                - password
                - password_confirmation
                - role_id
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: "johndoe"
                  email:
                    type: string
                    format: email
                    example: "johndoe@example.com"
                  role_id:
                    type: integer
                    example: 2
        '400':
          description: Validation error or missing/invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: {
                      "email": ["The email has already been taken."],
                      "password": ["The password confirmation does not match."]
                    }
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/list-user:
    get:
      summary: Get list of users
      description: This endpoint retrieves a list of all users except the super admin. Requires admin authentication.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of users to retrieve per page (for pagination).
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully retrieved the list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 2
                    username:
                      type: string
                      example: "janedoe"
                    email:
                      type: string
                      format: email
                      example: "janedoe@example.com"
                    role:
                      type: string
                      example: "User"
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/user-edit/{id}:
    get:
      summary: Get user details for editing
      description: Retrieve detailed information of a specific user by their ID. Requires admin authentication.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to retrieve
          required: true
          schema:
            type: integer
            example: 2
      responses:
        '200':
          description: Successfully retrieved the user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  username:
                    type: string
                    example: "janedoe"
                  email:
                    type: string
                    format: email
                    example: "janedoe@example.com"
                  role_id:
                    type: integer
                    example: 2
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found – The specified user ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/user-update/{id}:
    put:
      summary: Update user details
      description: Allows admins to update the details of a specific user. The fields to be updated include username, email, phone number, and address.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to be updated
          required: true
          schema:
            type: integer
            example: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "janedoe"
                email:
                  type: string
                  format: email
                  example: "janedoe@example.com"
                phone_number:
                  type: string
                  example: "0123456789"
                address:
                  type: string
                  example: "123 Main Street, City, Country"
              required:
                - username
                - email
                - phone_number
                - address
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated successfully"
        '400':
          description: Validation error or missing/invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    example: {
                      "username": ["Pleaser enter username"],
                      "email": ["Invalid email"]
                    }
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found – The specified user ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/user-delete/{id}:
    delete:
      summary: Delete a user
      description: Allows admins to delete a specific user by providing the user ID.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to be deleted
          required: true
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User has been deleted"
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found – The specified user ID does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/auth/admin/user-restore/{id}:
    patch:
      summary: Restore a soft-deleted user
      description: Allows admins to restore a user who was previously soft-deleted by providing their user ID.
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user to restore
          required: true
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: User restored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User has been restored"
        '401':
          description: Unauthorized access – Admin authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: User not found – The specified user ID does not exist or is not soft-deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/category:
    get:
      summary: Get all categories
      description: This endpoint retrieves all categories in the system, returning only their IDs and names.
      tags:
        - Category
      responses:
        '200':
          description: Successfully retrieved the list of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Technology"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/get-list-project:
    get:
      summary: Get list of active projects
      description: This endpoint retrieves a list of active projects with their creator username and associated image link, supporting pagination.
      tags:
        - Project
      parameters:
        - name: limit
          in: query
          description: The number of projects to return per page (default is 10).
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully retrieved the list of active projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Project Alpha"
                        description:
                          type: string
                          example: "A detailed description of the project."
                        goal_amount:
                          type: integer
                          example: 100000
                        collected_amount:
                          type: integer
                          example: 25000
                        start_date:
                          type: string
                          format: date
                          example: "2024-01-01"
                        end_date:
                          type: string
                          format: date
                          example: "2024-12-31"
                        status:
                          type: string
                          example: "Active"
                        Creator:
                          type: string
                          example: "admin"
                        LinkImage:
                          type: string
                          example: "uploads/image/project_alpha.jpg"
                  last_page:
                    type: integer
                    example: 5
                  per_page:
                    type: integer
                    example: 10
                  total:
                    type: integer
                    example: 50
        '404':
          description: No active projects found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Project not found"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

  /api/get-detail-project/{id}:
    get:
      summary: Get detailed information of a specific project
      description: This endpoint retrieves the detailed information of a project based on the project ID, including the creator's username and associated image link.
      tags:
        - Project
      parameters:
        - name: id
          in: path
          description: The ID of the project to retrieve details for.
          required: true
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Successfully retrieved the project details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Project Alpha"
                  description:
                    type: string
                    example: "A detailed description of the project."
                  goal_amount:
                    type: integer
                    example: 100000
                  collected_amount:
                    type: integer
                    example: 25000
                  start_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  end_date:
                    type: string
                    format: date
                    example: "2024-12-31"
                  status:
                    type: string
                    example: "Active"
                  Creator:
                    type: string
                    example: "admin"
                  LinkImage:
                    type: string
                    example: "uploads/image/project_alpha.jpg"
        '404':
          description: Project not found with the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not found detail of project"
        '500':
          description: Internal server error – An error occurred while processing the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An error occurred: [Exception message]"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT